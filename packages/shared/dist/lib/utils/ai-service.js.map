{
  "version": 3,
  "sources": ["../../../lib/utils/ai-service.ts"],
  "sourcesContent": ["import Anthropic from '@anthropic-ai/sdk';\nimport { TextBlock } from '@anthropic-ai/sdk/resources';\nimport { anthropicTokenStorage } from '@extension/storage';\n\ninterface AIServiceResponse {\n  text: string;\n}\n\nclass AnthropicService {\n  private anthropic: Anthropic | null = null;\n\n  constructor() {\n    this.init().catch(console.error);\n  }\n\n  async init() {\n    this.anthropic = new Anthropic({\n      apiKey: await anthropicTokenStorage.get(),\n      dangerouslyAllowBrowser: true,\n    });\n  }\n\n  async ask(prompt: string): Promise<AIServiceResponse> {\n    if (!this.anthropic) {\n      throw new Error('Anthropic service not initialized');\n    }\n\n    try {\n      const message = await this.anthropic.messages.create({\n        model: \"claude-3-5-sonnet-20240620\",\n        max_tokens: 1024,\n        messages: [\n          {\n            role: \"user\",\n            content: prompt,\n          },\n        ],\n      });\n\n      const textBlock = message.content[0] as TextBlock;\n      console.log(textBlock);\n\n      return { text: textBlock.text };\n    } catch (error) {\n      console.error('Error al consultar a Claude:', error);\n      throw new Error('Error al procesar la solicitud con Anthropic');\n    }\n  }\n}\n\nclass AIService {\n  private anthropicService: AnthropicService;\n\n  constructor() {\n    this.anthropicService = new AnthropicService();\n  }\n\n  async ask(prompt: string): Promise<AIServiceResponse> {\n    return this.anthropicService.ask(prompt);\n  }\n}\n\nexport const aiService = new AIService();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,eAAe;AAEtB,SAAS,6BAA6B;AAMtC,MAAM,iBAAiB;AAAA,EAGrB,cAAc;AAFd,SAAQ,YAA8B;AAGpC,SAAK,KAAK,EAAE,MAAM,QAAQ,KAAK;AAAA,EACjC;AAAA,EAEM,OAAO;AAAA;AACX,WAAK,YAAY,IAAI,UAAU;AAAA,QAC7B,QAAQ,MAAM,sBAAsB,IAAI;AAAA,QACxC,yBAAyB;AAAA,MAC3B,CAAC;AAAA,IACH;AAAA;AAAA,EAEM,IAAI,QAA4C;AAAA;AACpD,UAAI,CAAC,KAAK,WAAW;AACnB,cAAM,IAAI,MAAM,mCAAmC;AAAA,MACrD;AAEA,UAAI;AACF,cAAM,UAAU,MAAM,KAAK,UAAU,SAAS,OAAO;AAAA,UACnD,OAAO;AAAA,UACP,YAAY;AAAA,UACZ,UAAU;AAAA,YACR;AAAA,cACE,MAAM;AAAA,cACN,SAAS;AAAA,YACX;AAAA,UACF;AAAA,QACF,CAAC;AAED,cAAM,YAAY,QAAQ,QAAQ,CAAC;AACnC,gBAAQ,IAAI,SAAS;AAErB,eAAO,EAAE,MAAM,UAAU,KAAK;AAAA,MAChC,SAAS,OAAO;AACd,gBAAQ,MAAM,gCAAgC,KAAK;AACnD,cAAM,IAAI,MAAM,8CAA8C;AAAA,MAChE;AAAA,IACF;AAAA;AACF;AAEA,MAAM,UAAU;AAAA,EAGd,cAAc;AACZ,SAAK,mBAAmB,IAAI,iBAAiB;AAAA,EAC/C;AAAA,EAEM,IAAI,QAA4C;AAAA;AACpD,aAAO,KAAK,iBAAiB,IAAI,MAAM;AAAA,IACzC;AAAA;AACF;AAEO,aAAM,YAAY,IAAI,UAAU;",
  "names": []
}
